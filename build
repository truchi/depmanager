#!/usr/bin/env bash

NO_COLOR=$(tput sgr0)
BOLD=$(tput bold)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
# YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
# MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
# WHITE=$(tput setaf 7)

#
# Builds $1 to $2
#
function build {
  local src
  local dest
  src=$(realpath "$1")
  dest=$(realpath "$2")

  echo "${BOLD}${BLUE}i${NO_COLOR} ${BLUE}Building ${CYAN}$src${NO_COLOR}"

  # Get all the files to import
  declare -a all_imports
  declare -A file_imports
  resolve_imports "$src"

  # Concat all the files and clean
  local output
  output=$(concat_files "$src")
  output=$(clean_directives "$output")

  # Write
  mkdir -p "$(dirname "$dest")"
  echo -e "$output" > "$dest"

  echo "${BOLD}${GREEN}✔${NO_COLOR} ${BLUE}Built    ${CYAN}$dest${NO_COLOR}"
}

#
# Recursively traverses files looking for '# shellcheck source=somefile'
# Populates `all_imports` array
#
function resolve_imports() {
  local file="$1"
  local dir

  # Error if file is not found
  if [[ ! -f "$file" ]]; then
    echo "${BOLD}${RED}✗${NO_COLOR} ${CYAN}$file ${RED}not found${NO_COLOR}"
    exit
  fi

  # Assumes shellcheck source directive paths are relative to current file
  dir=$(dirname "$file")

  # Mark $file as imported 
  all_imports+=("$file")
  file_imports[$file]=""

  # Extract files to import
  # shellcheck disable=SC2207
  imports=($(grep '# shellcheck source=' "$file" | sed 's/# shellcheck source=\(.*\)/\1/'))

  # Resolve imports in imported files
  for import in "${imports[@]}"; do
    # Beware of the infinite!
    if ! array_includes "$dir/$import" all_imports[@]; then
      file_imports[$file]+=" $dir/$import"
      resolve_imports "$dir/$import"
    fi
  done
}

#
# Recursively concat files
#
function concat_files() {
  local file="$1"
  local concatenated=""

  # Concat imports
  for import in ${file_imports["$file"]}; do
    concatenated+="$(concat_files "$import")"
  done

  # Concat file
  concatenated+="$(cat "$file")\n"

  # Return
  echo "$concatenated"
}

#
# Removes some shellcheck directives
#
function clean_directives() {
  local string="$1"

  # Remove some useless directives
  string=$(perl -pe 's/# shellcheck (shell|source)=\S*\n+//gm' <<< "$string")
  string=$(perl -pe 's/. ""\n+//gm' <<< "$string")

  # Return
  echo "$string"
}

#
# Returns true if $1 is found in $2, false otherwise
#
function array_includes() {
  local needle="$1"
  local array=("${!2}")

  for item in "${array[@]}"; do
    if [[ "$item" == "$needle" ]]; then
      true
      return
    fi
  done

  false
}

build src/depmanager.sh dist/depmanager.sh
echo "${BOLD}${GREEN}Build complete${NO_COLOR}"

